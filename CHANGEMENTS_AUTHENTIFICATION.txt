CHANGEMENTS APPORT√âS POUR CORRIGER L'AUTHENTIFICATION
=====================================================

Date: 26 septembre 2025
Probl√®me: Erreur 401 lors de la connexion avec les comptes du seed clean

MODIFICATIONS EFFECTU√âES:
========================

1. CORRECTION DU MOD√àLE BaseUser.js
----------------------------------
Fichier: /home/tine29i/fadjma/backend/src/models/BaseUser.js
Ligne 35:

AVANT:
  validate: {
    isIn: [['patient', 'doctor', 'pharmacy']]
  }

APR√àS:
  validate: {
    isIn: [['patient', 'doctor', 'pharmacy', 'admin']]
  }

Raison: Le r√¥le 'admin' n'√©tait pas autoris√© dans la validation, causant des erreurs lors de la cr√©ation des comptes admin.

2. MISE √Ä JOUR DU CONTR√îLEUR D'AUTHENTIFICATION
----------------------------------------------
Fichier: /home/tine29i/fadjma/backend/src/controllers/authController.js

Ligne 1:
AVANT: const { User } = require('../models');
APR√àS: const { BaseUser } = require('../models');

Ligne 31:
AVANT: const existingUser = await User.findOne({ where: { email } });
APR√àS: const existingUser = await BaseUser.findOne({ where: { email } });

Ligne 63:
AVANT: const user = await User.create(userData);
APR√àS: const user = await BaseUser.create(userData);

Ligne 92:
AVANT: const user = await User.findOne({ where: { email } });
APR√àS: const user = await BaseUser.findOne({ where: { email } });

Ligne 125:
AVANT: const user = await User.findByPk(decoded.id);
APR√àS: const user = await BaseUser.findByPk(decoded.id);

Raison: Le contr√¥leur utilisait encore l'ancien mod√®le 'User' au lieu du nouveau mod√®le 'BaseUser' de l'architecture mise √† jour.

3. CR√âATION DU SYST√àME DE GESTION DES SEEDS
-------------------------------------------
Nouveau fichier: /home/tine29i/fadjma/backend/scripts/seed-manager.js
- Script de gestion centralis√©e des diff√©rents types de seeds
- Permet de basculer facilement entre seed complet et seed propre

Nouveau fichier: /home/tine29i/fadjma/backend/scripts/seed-clean.js
- Version all√©g√©e du seed avec uniquement les utilisateurs de base
- Aucune donn√©e de d√©monstration pr√©-remplie

Mise √† jour: /home/tine29i/fadjma/backend/package.json
Nouvelles commandes:
- npm run seed         # Affiche l'aide et les options
- npm run seed full    # Charge le seed complet
- npm run seed clean   # Charge le seed propre
- npm run seed:full    # Acc√®s direct au seed complet
- npm run seed:clean   # Acc√®s direct au seed propre

COMPTES DISPONIBLES APR√àS SEED CLEAN:
====================================

üë®‚Äç‚öïÔ∏è M√âDECINS:
- dr.martin@fadjma.com     | Demo2024! | (M√©decine g√©n√©rale)
- dr.diop@fadjma.com       | Demo2024! | (Cardiologie)

üë§ PATIENTS:
- patient1@demo.com        | Demo2024! | (Jean Dupont)
- patient2@demo.com        | Demo2024! | (Fatou Sall)

üè• PHARMACIE:
- pharmacie@fadjma.com     | Demo2024!

üë®‚Äçüíº ADMINISTRATEUR:
- admin@fadjma.com         | Admin2024!

TESTS DE VALIDATION:
===================
Fichier: /home/tine29i/fadjma/backend/test-login.js
- Script de test pour valider les comptes et mots de passe
- Confirme que tous les comptes fonctionnent correctement

R√âSULTAT:
=========
‚úÖ Tous les comptes du seed clean sont maintenant fonctionnels
‚úÖ L'authentification fonctionne correctement
‚úÖ Le syst√®me de basculement entre seeds est op√©rationnel
‚úÖ Les mots de passe sont correctement hach√©s et valid√©s

NOTES IMPORTANTES:
=================
- Le compte jean.dupont@demo.com n'existe que dans le seed complet
- Avec le seed clean, utiliser patient1@demo.com ou patient2@demo.com
- Le backend utilise maintenant exclusivement le mod√®le BaseUser
- Architecture pr√™te pour l'int√©gration Hedera et les tests personnalis√©s
# ====================================
# FADJMA - Environment Configuration
# ====================================
# Copy this file to .env and configure with your values

# ======================
# SERVER CONFIGURATION
# ======================
NODE_ENV=development
PORT=5000

# Verification Mode
# Set to 'true' to use real Hedera Mirror Node verification
# Set to 'false' to use 2-minute simulation (faster for development)
USE_MIRROR_NODE=false

# Frontend URL for CORS
FRONTEND_URL=http://localhost:3000

# ======================
# DATABASE - SQLite
# ======================
# SQLite database file will be created automatically in:
# - Local: backend/data/database.sqlite
# - Docker: /app/data/database.sqlite (persisted in volume)
# No additional configuration needed!

# ======================
# JWT CONFIGURATION
# ======================
# Generate a secure secret: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
JWT_EXPIRE=7d

# ======================
# HEDERA BLOCKCHAIN CONFIGURATION
# ======================

# Network: testnet or mainnet
HEDERA_NETWORK=testnet

# --- HEDERA EC25519 (Primary Account) ---
HEDERA_ACCOUNT_ID=0.0.6164695
HEDERA_PRIVATE_KEY=302e020100300506032b657004220420d8b2c962517bba1d36faea03760ade517d3171981d706c02be2dbdf271ee7558
HEDERA_TOPIC_ID=0.0.6854064

# --- HEDERA ECDSA (Secondary Account) ---
HEDERA_ECDSA_ACCOUNT_ID=0.0.6089195
HEDERA_ECDSA_PRIVATE_KEY=3030020100300706052b8104000a0422042058b9f1aefe6ba90ae0d397e39cdae3a596bb4b6208aae7cc9b17be0ea93c1a83
HEDERA_ECDSA_TOPIC_ID=0.0.7070750

# ======================
# KMS CONFIGURATION (Key Management Service)
# ======================
# Determines how private keys are stored/retrieved
KMS_PROVIDER=env
# Options:
#   - 'env' (default): Keys stored in environment variables
#   - 'aws': AWS KMS (requires AWS credentials)
#   - 'gcp': Google Cloud KMS (requires GCP credentials)
#   - 'vault': HashiCorp Vault (requires Vault URL and token)

# ======================
# HEDERA BATCHING CONFIGURATION
# ======================
# IMPORTANT: Batching disabled in development for immediate anchoring
# In production, enable to save Hedera transaction fees
HEDERA_USE_BATCHING=false
HEDERA_MAX_BATCH_SIZE=50
HEDERA_MIN_BATCH_SIZE=10
HEDERA_BATCH_TIMEOUT_MS=300000

# ======================
# HEDERA COMPRESSION CONFIGURATION
# ======================
# Compress messages before sending to Hedera (saves fees)
HEDERA_USE_COMPRESSION=true
HEDERA_COMPRESSION_ENABLED=true
HEDERA_MIN_COMPRESSION_SIZE=100

# ======================
# HEDERA RATE LIMITER CONFIGURATION
# ======================
# Control transaction throughput to Hedera network
HEDERA_MAX_TPS=8
HEDERA_RATE_LIMITER_ENABLED=true

# ======================
# HEDERA MULTI-TOPICS CONFIGURATION (Optional)
# ======================
# Use different topics for different types of data
# By default, all use HEDERA_ECDSA_TOPIC_ID
HEDERA_TOPIC_PRESCRIPTIONS=0.0.7070750
HEDERA_TOPIC_RECORDS=0.0.7070750
HEDERA_TOPIC_DELIVERIES=0.0.7070750
HEDERA_TOPIC_ACCESS=0.0.7070750
HEDERA_TOPIC_BATCH=0.0.7070750

# ======================
# ADVANCED OPTIONS (Optional)
# ======================

# Logging level: error, warn, info, debug
# LOG_LEVEL=info

# Mock Hedera for testing (bypasses real transactions)
# MOCK_HEDERA=false